{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\AuthApi2\\\\src\\\\app\\\\pages\\\\custom-pages\\\\CoursePages\\\\product-edit\\\\ProductEditForm.js\";\n// Form is based on Formik\n// Data validation is based on Yup\n// Please, be familiar with article first:\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Input, Select } from \"../../../../../_metronic/_partials/controls\";\nimport { Alert } from \"react-bootstrap\"; // import {\n//   AVAILABLE_COLORS,\n//   AVAILABLE_MANUFACTURES,\n//   ProductStatusTitles,\n//   ProductConditionTitles,\n// } from \"../ProductsUIHelpers\";\n// Validation schema\n\nvar ProductEditSchema = Yup.object().shape({\n  name: Yup.string().min(2, \"Minimum 2 symbols\").max(50, \"Maximum 50 symbols\").required(\"Name is required\")\n});\nexport function ProductEditForm(_ref) {\n  var _this = this;\n\n  var validate_errors = _ref.validate_errors,\n      product = _ref.product,\n      btnRef = _ref.btnRef,\n      saveProduct = _ref.saveProduct;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: product,\n    validationSchema: ProductEditSchema,\n    onSubmit: function onSubmit(values) {\n      saveProduct(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n      className: \"form form-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"code\",\n      component: Input,\n      placeholder: \"Code\",\n      label: \"Code\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"name\",\n      component: Input,\n      placeholder: \"Name\",\n      label: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"year\",\n      type: \"number\",\n      component: Input,\n      placeholder: \"Year\",\n      label: \"Year\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"actor\",\n      label: \"Actor\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, [{\n      name: \"--Select--\"\n    }, {\n      name: \"Xuân Tùng\"\n    }, {\n      name: \"Phương Linh\"\n    }].map(function (actor, id) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        selected: id == 0,\n        key: id,\n        value: actor.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      }, actor.name);\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      as: \"textarea\",\n      className: \"form-control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    })), validate_errors.map(function (message, id) {\n      return /*#__PURE__*/React.createElement(Alert, {\n        key: id,\n        variant: message.variant,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, message.message));\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      style: {\n        display: \"none\"\n      },\n      ref: btnRef,\n      onSubmit: function onSubmit() {\n        return handleSubmit();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    })));\n  }));\n}","map":{"version":3,"sources":["D:/ReactJS/AuthApi2/src/app/pages/custom-pages/CoursePages/product-edit/ProductEditForm.js"],"names":["React","Formik","Form","Field","Yup","Input","Select","Alert","ProductEditSchema","object","shape","name","string","min","max","required","ProductEditForm","validate_errors","product","btnRef","saveProduct","values","handleSubmit","map","actor","id","message","variant","display"],"mappings":"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","sourcesContent":["// Form is based on Formik\r\n// Data validation is based on Yup\r\n// Please, be familiar with article first:\r\n// https://hackernoon.com/react-form-validation-with-formik-and-yup-8b76bda62e10\r\nimport React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Select } from \"../../../../../_metronic/_partials/controls\";\r\nimport {Alert} from \"react-bootstrap\"\r\n// import {\r\n//   AVAILABLE_COLORS,\r\n//   AVAILABLE_MANUFACTURES,\r\n//   ProductStatusTitles,\r\n//   ProductConditionTitles,\r\n// } from \"../ProductsUIHelpers\";\r\n\r\n// Validation schema\r\nconst ProductEditSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, \"Minimum 2 symbols\")\r\n    .max(50, \"Maximum 50 symbols\")\r\n    .required(\"Name is required\"),\r\n});\r\n\r\nexport function ProductEditForm({\r\n  validate_errors,\r\n  product,\r\n  btnRef,\r\n  saveProduct,\r\n}) {\r\n  return (\r\n    <>\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={product}\r\n        validationSchema={ProductEditSchema}\r\n        onSubmit={(values) => {\r\n          saveProduct(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <>\r\n            <Form className=\"form form-label-right\">\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-lg-2\">\r\n                  <Field\r\n                    name=\"code\"\r\n                    component={Input}\r\n                    placeholder=\"Code\"\r\n                    label=\"Code\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Field\r\n                    name=\"name\"\r\n                    component={Input}\r\n                    placeholder=\"Name\"\r\n                    label=\"Name\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-2\">\r\n                  <Field\r\n                    name=\"year\"\r\n                    type=\"number\"\r\n                    component={Input}\r\n                    placeholder=\"Year\"\r\n                    label=\"Year\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                  <Select name=\"actor\" label=\"Actor\">\r\n                    {[{name:\"--Select--\"},{name:\"Xuân Tùng\"},{name:\"Phương Linh\"}].map((actor, id) => (\r\n                      <option selected={id==0} key={id} value={actor.name}>\r\n                        {actor.name}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Description</label>\r\n                <Field\r\n                  name=\"description\"\r\n                  as=\"textarea\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              {validate_errors.map((message, id)=>(\r\n              <Alert key={id} variant={message.variant}>\r\n                <p>{message.message}</p>\r\n              </Alert>))}\r\n              <button\r\n                type=\"submit\"\r\n                style={{ display: \"none\" }}\r\n                ref={btnRef}\r\n                onSubmit={() => handleSubmit()}\r\n              ></button>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}