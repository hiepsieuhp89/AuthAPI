{"ast":null,"code":"/* eslint-disable */\n\"use strict\";\n\nimport { KTUtil } from \"./../../components/util.js\";\nimport KTMenu from \"./../../components/menu.js\";\nimport KTLayoutAside from \"./aside.js\";\n\nvar KTLayoutAsideMenu = function () {\n  // Private properties\n  var _element;\n\n  var _menuObject; // Initialize\n\n\n  var _init = function _init() {\n    var menuDesktopMode = KTUtil.attr(_element, 'data-menu-dropdown') === '1' ? 'dropdown' : 'accordion';\n    var scroll;\n\n    if (KTUtil.isBreakpointDown('lg') && KTUtil.attr(_element, 'data-menu-scroll') === '1') {\n      scroll = {\n        rememberPosition: true,\n        // remember position on page reload\n        height: function height() {\n          // calculate available scrollable area height\n          var height = parseInt(KTUtil.getViewPort().height);\n          height = height - (parseInt(KTUtil.css(_element, 'marginBottom')) + parseInt(KTUtil.css(_element, 'marginTop')));\n          return height;\n        }\n      };\n    }\n\n    _menuObject = new KTMenu(_element, {\n      // Vertical scroll\n      scroll: scroll,\n      // Submenu setup\n      submenu: {\n        desktop: menuDesktopMode,\n        tablet: 'accordion',\n        // menu set to accordion in tablet mode\n        mobile: 'accordion' // menu set to accordion in mobile mode\n\n      },\n      // Accordion setup\n      accordion: {\n        expandAll: false // allow having multiple expanded accordions in the menu\n\n      }\n    }); // Close aside offcanvas panel before page reload On tablet and mobile\n\n    _menuObject.on('linkClick', function (menu) {\n      if (KTUtil.isBreakpointDown('lg')) {\n        // Tablet and mobile mode\n        KTLayoutAside.getOffcanvas().hide(); // Hide offcanvas after general link click\n      }\n    });\n  }; // Public methods\n\n\n  return {\n    init: function init(id) {\n      _element = KTUtil.getById(id);\n\n      if (!_element) {\n        return;\n      } // Initialize menu\n\n\n      _init();\n    },\n    getElement: function getElement() {\n      return _element;\n    },\n    getMenu: function getMenu() {\n      return _menuObject;\n    },\n    pauseDropdownHover: function pauseDropdownHover(time) {\n      if (_menuObject) {\n        _menuObject.pauseDropdownHover(time);\n      }\n    },\n    closeMobileOffcanvas: function closeMobileOffcanvas() {\n      if (_menuObject && KTUtil.isMobileDevice()) {\n        _menuObject.hide();\n      }\n    }\n  };\n}(); // Webpack support\n\n\nif (typeof module !== 'undefined') {// module.exports = KTLayoutAsideMenu;\n}\n\nexport default KTLayoutAsideMenu;","map":{"version":3,"sources":["D:/ReactJS/AuthApi2/src/_metronic/_assets/js/layout/base/aside-menu.js"],"names":["KTUtil","KTMenu","KTLayoutAside","KTLayoutAsideMenu","_element","_menuObject","_init","menuDesktopMode","attr","scroll","isBreakpointDown","rememberPosition","height","parseInt","getViewPort","css","submenu","desktop","tablet","mobile","accordion","expandAll","on","menu","getOffcanvas","hide","init","id","getById","getElement","getMenu","pauseDropdownHover","time","closeMobileOffcanvas","isMobileDevice","module"],"mappings":"AAAA;AACA;;AAEA,SAASA,MAAT,QAAuB,4BAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,YAA1B;;AAEA,IAAIC,iBAAiB,GAAG,YAAW;AAC/B;AACA,MAAIC,QAAJ;;AACA,MAAIC,WAAJ,CAH+B,CAKlC;;;AACA,MAAIC,KAAK,GAAG,SAARA,KAAQ,GAAW;AACtB,QAAIC,eAAe,GAAIP,MAAM,CAACQ,IAAP,CAAYJ,QAAZ,EAAsB,oBAAtB,MAAgD,GAAhD,GAAsD,UAAtD,GAAmE,WAA1F;AACM,QAAIK,MAAJ;;AAEN,QAAIT,MAAM,CAACU,gBAAP,CAAwB,IAAxB,KAAiCV,MAAM,CAACQ,IAAP,CAAYJ,QAAZ,EAAsB,kBAAtB,MAA8C,GAAnF,EAAwF;AACvFK,MAAAA,MAAM,GAAG;AACRE,QAAAA,gBAAgB,EAAE,IADV;AACgB;AACxBC,QAAAA,MAAM,EAAE,kBAAW;AAAE;AACpB,cAAIA,MAAM,GAAGC,QAAQ,CAACb,MAAM,CAACc,WAAP,GAAqBF,MAAtB,CAArB;AAEAA,UAAAA,MAAM,GAAGA,MAAM,IAAIC,QAAQ,CAACb,MAAM,CAACe,GAAP,CAAWX,QAAX,EAAqB,cAArB,CAAD,CAAR,GAAiDS,QAAQ,CAACb,MAAM,CAACe,GAAP,CAAWX,QAAX,EAAqB,WAArB,CAAD,CAA7D,CAAf;AAEA,iBAAOQ,MAAP;AACA;AARO,OAAT;AAUA;;AAEDP,IAAAA,WAAW,GAAG,IAAIJ,MAAJ,CAAWG,QAAX,EAAqB;AAClC;AACAK,MAAAA,MAAM,EAAEA,MAF0B;AAIlC;AACAO,MAAAA,OAAO,EAAE;AACRC,QAAAA,OAAO,EAAEV,eADD;AAERW,QAAAA,MAAM,EAAE,WAFA;AAEa;AACrBC,QAAAA,MAAM,EAAE,WAHA,CAGY;;AAHZ,OALyB;AAWlC;AACAC,MAAAA,SAAS,EAAE;AACVC,QAAAA,SAAS,EAAE,KADD,CACO;;AADP;AAZuB,KAArB,CAAd,CAjBsB,CAkCrB;;AACKhB,IAAAA,WAAW,CAACiB,EAAZ,CAAe,WAAf,EAA4B,UAASC,IAAT,EAAe;AACvC,UAAIvB,MAAM,CAACU,gBAAP,CAAwB,IAAxB,CAAJ,EAAmC;AAAE;AACjCR,QAAAA,aAAa,CAACsB,YAAd,GAA6BC,IAA7B,GAD+B,CACM;AACxC;AACJ,KAJD;AAKN,GAxCD,CANkC,CAgD/B;;;AACH,SAAO;AACNC,IAAAA,IAAI,EAAE,cAASC,EAAT,EAAa;AACTvB,MAAAA,QAAQ,GAAGJ,MAAM,CAAC4B,OAAP,CAAeD,EAAf,CAAX;;AAEA,UAAI,CAACvB,QAAL,EAAe;AACX;AACH,OALQ,CAOT;;;AACAE,MAAAA,KAAK;AACd,KAVK;AAYNuB,IAAAA,UAAU,EAAE,sBAAW;AACtB,aAAOzB,QAAP;AACA,KAdK;AAgBA0B,IAAAA,OAAO,EAAE,mBAAW;AACzB,aAAOzB,WAAP;AACA,KAlBK;AAoBA0B,IAAAA,kBAAkB,EAAE,4BAASC,IAAT,EAAe;AACxC,UAAI3B,WAAJ,EAAiB;AAChBA,QAAAA,WAAW,CAAC0B,kBAAZ,CAA+BC,IAA/B;AACA;AACD,KAxBK;AA0BNC,IAAAA,oBAAoB,EAAE,gCAAW;AAChC,UAAI5B,WAAW,IAAIL,MAAM,CAACkC,cAAP,EAAnB,EAA4C;AAC3C7B,QAAAA,WAAW,CAACoB,IAAZ;AACA;AACD;AA9BK,GAAP;AAgCA,CAjFuB,EAAxB,C,CAmFA;;;AACA,IAAI,OAAOU,MAAP,KAAkB,WAAtB,EAAmC,CAClC;AACA;;AAED,eAAehC,iBAAf","sourcesContent":["/* eslint-disable */\n\"use strict\";\n\nimport { KTUtil } from \"./../../components/util.js\";\nimport KTMenu from \"./../../components/menu.js\";\nimport KTLayoutAside from \"./aside.js\";\r\n\r\nvar KTLayoutAsideMenu = function() {\r\n    // Private properties\r\n    var _element;\r\n    var _menuObject;\r\n\r\n\t// Initialize\r\n\tvar _init = function() {\r\n\t\tvar menuDesktopMode = (KTUtil.attr(_element, 'data-menu-dropdown') === '1' ? 'dropdown' : 'accordion');\r\n        var scroll;\r\n\r\n\t\tif (KTUtil.isBreakpointDown('lg') && KTUtil.attr(_element, 'data-menu-scroll') === '1') {\r\n\t\t\tscroll = {\r\n\t\t\t\trememberPosition: true, // remember position on page reload\r\n\t\t\t\theight: function() { // calculate available scrollable area height\r\n\t\t\t\t\tvar height = parseInt(KTUtil.getViewPort().height);\r\n\r\n\t\t\t\t\theight = height - (parseInt(KTUtil.css(_element, 'marginBottom')) + parseInt(KTUtil.css(_element, 'marginTop')));\r\n\r\n\t\t\t\t\treturn height;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t_menuObject = new KTMenu(_element, {\r\n\t\t\t// Vertical scroll\r\n\t\t\tscroll: scroll,\r\n\r\n\t\t\t// Submenu setup\r\n\t\t\tsubmenu: {\r\n\t\t\t\tdesktop: menuDesktopMode,\r\n\t\t\t\ttablet: 'accordion', // menu set to accordion in tablet mode\r\n\t\t\t\tmobile: 'accordion' // menu set to accordion in mobile mode\r\n\t\t\t},\r\n\r\n\t\t\t// Accordion setup\r\n\t\t\taccordion: {\r\n\t\t\t\texpandAll: false // allow having multiple expanded accordions in the menu\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t // Close aside offcanvas panel before page reload On tablet and mobile\r\n        _menuObject.on('linkClick', function(menu) {\r\n            if (KTUtil.isBreakpointDown('lg')) { // Tablet and mobile mode\r\n                KTLayoutAside.getOffcanvas().hide(); // Hide offcanvas after general link click\r\n            }\r\n        });\r\n\t}\r\n\r\n    // Public methods\r\n\treturn {\r\n\t\tinit: function(id) {\r\n            _element = KTUtil.getById(id);\r\n\r\n            if (!_element) {\r\n                return;\r\n            }\r\n\r\n            // Initialize menu\r\n            _init();\r\n\t\t},\r\n\r\n\t\tgetElement: function() {\r\n\t\t\treturn _element;\r\n\t\t},\r\n\r\n        getMenu: function() {\r\n\t\t\treturn _menuObject;\r\n\t\t},\r\n\r\n        pauseDropdownHover: function(time) {\r\n\t\t\tif (_menuObject) {\r\n\t\t\t\t_menuObject.pauseDropdownHover(time);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcloseMobileOffcanvas: function() {\r\n\t\t\tif (_menuObject && KTUtil.isMobileDevice()) {\r\n\t\t\t\t_menuObject.hide();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n\t// module.exports = KTLayoutAsideMenu;\r\n}\r\n\nexport default KTLayoutAsideMenu;"]},"metadata":{},"sourceType":"module"}