{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\AuthApi2\\\\src\\\\app\\\\Routes.js\";\n\n/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\r\n */\nimport React from \"react\";\nimport { Redirect, Switch, Route } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Layout } from \"../_metronic/layout\";\nimport BasePage from \"./BasePage\";\nimport { Logout, AuthPage } from \"./modules/Auth\";\nimport ErrorsPage from \"./modules/ErrorsExamples/ErrorsPage\";\nexport function Routes() {\n  var isAuthorized = localStorage.getItem('token') == null ? false : true;\n  return /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, !isAuthorized ?\n  /*#__PURE__*/\n\n  /*Render auth page when user at `/auth` and not authorized.*/\n  React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AuthPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  })) :\n  /*#__PURE__*/\n\n  /*Otherwise redirect to root page (`/`)*/\n  React.createElement(Redirect, {\n    from: \"/auth\",\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/error\",\n    component: ErrorsPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/logout\",\n    component: Logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), !isAuthorized ?\n  /*#__PURE__*/\n\n  /*Redirect to `/auth` when user is not authorized*/\n  React.createElement(Redirect, {\n    to: \"/auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BasePage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["D:/ReactJS/AuthApi2/src/app/Routes.js"],"names":["React","Redirect","Switch","Route","shallowEqual","useSelector","Layout","BasePage","Logout","AuthPage","ErrorsPage","Routes","isAuthorized","localStorage","getItem"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,KAA3B,QAAwC,kBAAxC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAAQC,MAAR,QAAqB,qBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,gBAAjC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,OAAO,SAASC,MAAT,GAAkB;AAErB,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAA+B,IAA/B,GAAqC,KAArC,GAA2C,IAAhE;AAEA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACF,YAAD;AAAA;;AACG;AACA,sBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFH;AAAA;;AAMG;AACA,sBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,OAAf;AAAuB,IAAA,EAAE,EAAC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARR,eAWI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEF,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,eAYI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEF,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAeK,CAACI,YAAD;AAAA;;AACG;AACA,sBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,gBAIG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAnBR,CADJ;AA0BH","sourcesContent":["/**\r\n * High level router.\r\n *\r\n * Note: It's recommended to compose related routes in internal router\r\n * components (e.g: `src/app/modules/Auth/pages/AuthPage`, `src/app/BasePage`).\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Redirect, Switch, Route } from \"react-router-dom\";\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport {Layout} from \"../_metronic/layout\";\r\nimport BasePage from \"./BasePage\";\r\nimport { Logout, AuthPage } from \"./modules/Auth\";\r\nimport ErrorsPage from \"./modules/ErrorsExamples/ErrorsPage\";\r\n\r\nexport function Routes() {\r\n    \r\n    const isAuthorized = localStorage.getItem('token')==null? false:true;\r\n\r\n    return (\r\n        <Switch>\r\n            {!isAuthorized ? (\r\n                /*Render auth page when user at `/auth` and not authorized.*/\r\n                <Route>\r\n                    <AuthPage />\r\n                </Route>\r\n            ) : (\r\n                /*Otherwise redirect to root page (`/`)*/\r\n                <Redirect from=\"/auth\" to=\"/\"/>\r\n            )}\r\n\r\n            <Route path=\"/error\" component={ErrorsPage}/>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n\r\n\r\n            {!isAuthorized ? (\r\n                /*Redirect to `/auth` when user is not authorized*/\r\n                <Redirect to=\"/auth/login\"/>\r\n            ) : (\r\n                <Layout>\r\n                    <BasePage/>\r\n                </Layout>\r\n            )}\r\n        </Switch>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}