{"ast":null,"code":"import _objectSpread from \"D:\\\\ReactJS\\\\AuthApi2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\ReactJS\\\\AuthApi2\\\\src\\\\app\\\\pages\\\\custom-pages\\\\CoursePages\\\\products-filter\\\\ProductsFilter.js\";\nimport React, { useMemo } from \"react\";\nimport { Formik } from \"formik\";\nimport { isEqual } from \"lodash\";\nimport { useProductsUIContext } from \"../ProductsUIContext\"; //import { useHistory} from \"react-router-dom\";\n\nvar prepareFilter = function prepareFilter(queryParams, values) {\n  var status = values.status,\n      condition = values.condition,\n      searchText = values.searchText;\n\n  var newQueryParams = _objectSpread({}, queryParams);\n\n  var filter = {}; // Filter by status\n\n  filter.status = status !== \"\" ? +status : undefined; // Filter by condition\n\n  filter.condition = condition !== \"\" ? +condition : undefined; // Filter by all fields\n\n  filter.model = searchText;\n\n  if (searchText) {\n    filter.code = searchText;\n    filter.name = searchText;\n  }\n\n  newQueryParams.filter = filter;\n  return newQueryParams;\n};\n\nexport function ProductsFilter(_ref) {\n  var _this = this;\n\n  var listLoading = _ref.listLoading;\n  //const history = useHistory();\n  // Products UI Context\n  var productsUIContext = useProductsUIContext();\n  var productsUIProps = useMemo(function () {\n    return {\n      setQueryParams: productsUIContext.setQueryParams,\n      queryParams: productsUIContext.queryParams\n    };\n  }, [productsUIContext]);\n\n  var applyFilter = function applyFilter(values) {\n    var newQueryParams = prepareFilter(productsUIProps.queryParams, values); //console.log(newQueryParams);\n    // const params = \"keyword=\"+newQueryParams.filter.model;\n    // history.push('/courses?'+params);\n\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\n      newQueryParams.pageNumber = 1;\n      productsUIProps.setQueryParams(newQueryParams);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      status: \"\",\n      // values => All=\"\"/Selling=0/Sold=1\n      condition: \"\",\n      // values => All=\"\"/New=0/Used=1\n      searchText: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      applyFilter(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        handleSubmit = _ref2.handleSubmit,\n        handleBlur = _ref2.handleBlur,\n        handleChange = _ref2.handleChange,\n        setFieldValue = _ref2.setFieldValue;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form form-label-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"searchText\",\n      placeholder: \"Search\",\n      onBlur: handleBlur,\n      value: values.searchText,\n      onChange: function onChange(e) {\n        setFieldValue(\"searchText\", e.target.value);\n        handleSubmit();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"form-text text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, \"Search\"), \" in all fields\"))));\n  }));\n}","map":{"version":3,"sources":["D:/ReactJS/AuthApi2/src/app/pages/custom-pages/CoursePages/products-filter/ProductsFilter.js"],"names":["React","useMemo","Formik","isEqual","useProductsUIContext","prepareFilter","queryParams","values","status","condition","searchText","newQueryParams","filter","undefined","model","code","name","ProductsFilter","listLoading","productsUIContext","productsUIProps","setQueryParams","applyFilter","pageNumber","handleSubmit","handleBlur","handleChange","setFieldValue","e","target","value"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { isEqual } from \"lodash\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\n//import { useHistory} from \"react-router-dom\";\r\n\r\nconst prepareFilter = (queryParams, values) => {\r\n  const { status, condition, searchText } = values;\r\n  const newQueryParams = { ...queryParams };\r\n  const filter = {};\r\n  // Filter by status\r\n  filter.status = status !== \"\" ? +status : undefined;\r\n  // Filter by condition\r\n  filter.condition = condition !== \"\" ? +condition : undefined;\r\n  // Filter by all fields\r\n  filter.model = searchText;\r\n  if (searchText) {\r\n    filter.code = searchText;\r\n    filter.name = searchText;\r\n  }\r\n  newQueryParams.filter = filter;\r\n  return newQueryParams;\r\n};\r\n\r\nexport function ProductsFilter({ listLoading }) {\r\n\r\n  //const history = useHistory();\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      queryParams: productsUIContext.queryParams,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n\r\n  const applyFilter = (values) => {\r\n\r\n    const newQueryParams = prepareFilter(productsUIProps.queryParams, values);\r\n\r\n    //console.log(newQueryParams);\r\n\r\n    // const params = \"keyword=\"+newQueryParams.filter.model;\r\n\r\n    // history.push('/courses?'+params);\r\n\r\n    if (!isEqual(newQueryParams, productsUIProps.queryParams)) {\r\n      newQueryParams.pageNumber = 1;\r\n      productsUIProps.setQueryParams(newQueryParams);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          status: \"\", // values => All=\"\"/Selling=0/Sold=1\r\n          condition: \"\", // values => All=\"\"/New=0/Used=1\r\n          searchText: \"\",\r\n        }}\r\n        onSubmit={(values) => {\r\n          applyFilter(values);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          handleSubmit,\r\n          handleBlur,\r\n          handleChange,\r\n          setFieldValue,\r\n        }) => (\r\n          <form onSubmit={handleSubmit} className=\"form form-label-right\">\r\n            <div className=\"form-group row\">\r\n              {/* <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  placeholder=\"Filter by code\"\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"status\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  value={values.status}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">Selling</option>\r\n                  <option value=\"1\">Sold</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Status\r\n                </small>\r\n              </div> */}\r\n              {/* <div className=\"col-lg-2\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  placeholder=\"Filter by Type\"\r\n                  name=\"condition\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"condition\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                  value={values.condition}\r\n                >\r\n                  <option value=\"\">All</option>\r\n                  <option value=\"0\">New</option>\r\n                  <option value=\"1\">Used</option>\r\n                </select>\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Filter</b> by Condition\r\n                </small>\r\n              </div> */}\r\n              <div className=\"col-lg-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"searchText\"\r\n                  placeholder=\"Search\"\r\n                  onBlur={handleBlur}\r\n                  value={values.searchText}\r\n                  onChange={(e) => {\r\n                    setFieldValue(\"searchText\", e.target.value);\r\n                    handleSubmit();\r\n                  }}\r\n                />\r\n                <small className=\"form-text text-muted\">\r\n                  <b>Search</b> in all fields\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}