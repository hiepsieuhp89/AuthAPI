{"ast":null,"code":"import _toConsumableArray from \"D:\\\\ReactJS\\\\AuthApi2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\ReactJS\\\\AuthApi2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ReactJS\\\\AuthApi2\\\\src\\\\app\\\\pages\\\\custom-pages\\\\CoursePages\\\\products-table\\\\ProductsTable.js\";\n// React bootstrap table next =>\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\nimport React, { useEffect, useMemo, useState } from \"react\"; //import { useHistory, useLocation } from \"react-router-dom\";\n//import queryString from \"querystring\";\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider } from \"react-bootstrap-table2-paginator\"; //import { useDispatch} from \"react-redux\";\n//import * as actions from \"../../../_redux/products/productsActions\";\n\nimport * as uiHelpers from \"../ProductsUIHelpers\";\nimport { getHandlerTableChange, NoRecordsFoundMessage, PleaseWaitMessage, sortCaret } from \"../../../../../_metronic/_helpers\";\nimport * as columnFormatters from \"./column-formatters\";\nimport { Pagination } from \"../../../../../_metronic/_partials/controls\";\nimport { useProductsUIContext } from \"../ProductsUIContext\";\nimport { ProductsGrouping } from \"../products-grouping/ProductsGrouping\"; //import { ProductsDeleteDialog } from \"../products-delete-dialog/ProductsDeleteDialog\";\n\nexport function ProductsTable(props) {\n  // const history = useHistory();\n  // const location = useLocation();\n  //\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalCount = _useState2[0],\n      setTotalCount = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      entities = _useState4[0],\n      setEntities = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listLoading = _useState6[0],\n      setListLoading = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      batchSelection = _useState8[0],\n      setBatchSelection = _useState8[1]; // Products UI Context\n\n\n  var productsUIContext = useProductsUIContext();\n  var productsUIProps = useMemo(function () {\n    return {\n      ids: productsUIContext.ids,\n      setIds: productsUIContext.setIds,\n      queryParams: productsUIContext.queryParams,\n      setQueryParams: productsUIContext.setQueryParams,\n      openEditProductPage: productsUIContext.openEditProductPage,\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog\n    };\n  }, [productsUIContext]);\n  var getSelectedRows = {\n    mode: \"checkbox\",\n    clickToSelect: true,\n    onSelect: function onSelect(row, isSelect, rowIndex, e) {\n      isSelect ? setBatchSelection(function () {\n        return [].concat(_toConsumableArray(batchSelection), [row.id]);\n      }) : setBatchSelection(function () {\n        return batchSelection.filter(function (id) {\n          return id != row.id;\n        });\n      });\n    },\n    onSelectAll: function onSelectAll(isSelect, rows, e) {\n      //console.log(rows)\n      isSelect ? setBatchSelection(function () {\n        return rows.map(function (row) {\n          return row.id;\n        });\n      }) : setBatchSelection(function () {\n        return [];\n      });\n    }\n  };\n  useEffect(function () {\n    console.log(\"batchSelection changed! :\");\n    console.log(batchSelection);\n  }, [batchSelection]); // Getting curret state of products list from store (Redux)\n  // const { currentState } = useSelector(\n  //   (state) => ({ currentState: state.products }),\n  //   shallowEqual\n  // );\n  //const { totalCount, listLoading } = currentState;\n  // Products Redux state\n  //const dispatch = useDispatch();\n\n  function fetchCourses(keyword) {\n    var url = keyword ? \"\".concat(process.env.REACT_APP_WEBSERVER_API_URL, \"/auths?keyword=\").concat(keyword) : \"\".concat(process.env.REACT_APP_WEBSERVER_API_URL, \"/auths\");\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setTotalCount(result.length);\n      setEntities(result);\n      setListLoading(false);\n    });\n  }\n\n  useEffect(function () {\n    var keyword = props.queryParams.filter.model || \"\";\n    console.log(\"keyword searched: \" + keyword);\n    fetchCourses(keyword);\n    console.log(\"courses fetched\");\n  }, [props]); // Table columns\n\n  var columns = [{\n    dataField: \"id\",\n    text: \"Course id\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"name\",\n    text: \"Tên\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"username\",\n    text: \"Tên đăng nhập\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"password\",\n    text: \"Mật khẩu\",\n    sort: true,\n    sortCaret: sortCaret\n  }, {\n    dataField: \"status\",\n    text: \"Trạng thái\"\n  }, {\n    dataField: \"action\",\n    text: \"Actions\",\n    formatter: columnFormatters.ActionsColumnFormatter,\n    formatExtraData: {\n      openEditProductPage: productsUIProps.openEditProductPage,\n      openDeleteProductDialog: productsUIProps.openDeleteProductDialog\n    },\n    classes: \"text-right pr-0\",\n    headerClasses: \"text-right pr-3\",\n    style: {\n      minWidth: \"100px\"\n    }\n  }]; // Table pagination properties\n\n  var paginationOptions = {\n    custom: true,\n    totalSize: totalCount,\n    sizePerPageList: uiHelpers.sizePerPageList,\n    sizePerPage: productsUIProps.queryParams.pageSize,\n    page: productsUIProps.queryParams.pageNumber\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, batchSelection.length > 0 && /*#__PURE__*/React.createElement(ProductsGrouping, {\n    ids: batchSelection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(BootstrapTable, {\n    wrapperClasses: \"table-responsive\",\n    classes: \"table table-head-custom table-vertical-center overflow-hidden\",\n    bootstrap4: true,\n    bordered: false,\n    keyField: \"id\",\n    data: entities === null ? [] : entities,\n    columns: columns,\n    selectRow: getSelectedRows,\n    pagination: paginationFactory(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PleaseWaitMessage, {\n    entities: entities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NoRecordsFoundMessage, {\n    entities: entities,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/ReactJS/AuthApi2/src/app/pages/custom-pages/CoursePages/products-table/ProductsTable.js"],"names":["React","useEffect","useMemo","useState","BootstrapTable","paginationFactory","PaginationProvider","uiHelpers","getHandlerTableChange","NoRecordsFoundMessage","PleaseWaitMessage","sortCaret","columnFormatters","Pagination","useProductsUIContext","ProductsGrouping","ProductsTable","props","totalCount","setTotalCount","entities","setEntities","listLoading","setListLoading","batchSelection","setBatchSelection","productsUIContext","productsUIProps","ids","setIds","queryParams","setQueryParams","openEditProductPage","openDeleteProductDialog","getSelectedRows","mode","clickToSelect","onSelect","row","isSelect","rowIndex","e","id","filter","onSelectAll","rows","map","console","log","fetchCourses","keyword","url","process","env","REACT_APP_WEBSERVER_API_URL","fetch","then","res","json","result","length","model","columns","dataField","text","sort","formatter","ActionsColumnFormatter","formatExtraData","classes","headerClasses","style","minWidth","paginationOptions","custom","totalSize","sizePerPageList","sizePerPage","pageSize","page","pageNumber"],"mappings":"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","sourcesContent":["// React bootstrap table next =>\r\n// DOCS: https://react-bootstrap-table.github.io/react-bootstrap-table2/docs/\r\n// STORYBOOK: https://react-bootstrap-table.github.io/react-bootstrap-table2/storybook/index.html\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\n//import { useHistory, useLocation } from \"react-router-dom\";\r\n//import queryString from \"querystring\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, {\r\n  PaginationProvider,\r\n} from \"react-bootstrap-table2-paginator\";\r\n//import { useDispatch} from \"react-redux\";\r\n//import * as actions from \"../../../_redux/products/productsActions\";\r\nimport * as uiHelpers from \"../ProductsUIHelpers\";\r\nimport {\r\n  getHandlerTableChange,\r\n  NoRecordsFoundMessage,\r\n  PleaseWaitMessage,\r\n  sortCaret,\r\n} from \"../../../../../_metronic/_helpers\";\r\nimport * as columnFormatters from \"./column-formatters\";\r\nimport { Pagination } from \"../../../../../_metronic/_partials/controls\";\r\nimport { useProductsUIContext } from \"../ProductsUIContext\";\r\nimport { ProductsGrouping } from \"../products-grouping/ProductsGrouping\";\r\n//import { ProductsDeleteDialog } from \"../products-delete-dialog/ProductsDeleteDialog\";\r\n\r\nexport function ProductsTable(props) {\r\n  // const history = useHistory();\r\n  // const location = useLocation();\r\n\r\n  //\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [entities, setEntities] = useState([]);\r\n  const [listLoading, setListLoading] = useState(true);\r\n  const [batchSelection, setBatchSelection] = useState([]);\r\n\r\n  // Products UI Context\r\n  const productsUIContext = useProductsUIContext();\r\n  const productsUIProps = useMemo(() => {\r\n    return {\r\n      ids: productsUIContext.ids,\r\n      setIds: productsUIContext.setIds,\r\n      queryParams: productsUIContext.queryParams,\r\n      setQueryParams: productsUIContext.setQueryParams,\r\n      openEditProductPage: productsUIContext.openEditProductPage,\r\n      openDeleteProductDialog: productsUIContext.openDeleteProductDialog,\r\n    };\r\n  }, [productsUIContext]);\r\n\r\n  const getSelectedRows = {\r\n    mode: \"checkbox\",\r\n    clickToSelect: true,\r\n    onSelect: (row, isSelect, rowIndex, e) => {\r\n      isSelect\r\n        ? setBatchSelection(() => {\r\n            return [...batchSelection, row.id];\r\n          })\r\n        : setBatchSelection(() => {\r\n            return batchSelection.filter((id) => {\r\n              return id != row.id;\r\n            });\r\n          });\r\n    },\r\n    onSelectAll: (isSelect, rows, e) => {\r\n      //console.log(rows)\r\n      isSelect\r\n        ? setBatchSelection(() => {\r\n            return rows.map((row) => row.id);\r\n          })\r\n        : setBatchSelection(() => {\r\n            return [];\r\n          });\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"batchSelection changed! :\");\r\n    console.log(batchSelection);\r\n  }, [batchSelection]);\r\n\r\n  // Getting curret state of products list from store (Redux)\r\n  // const { currentState } = useSelector(\r\n  //   (state) => ({ currentState: state.products }),\r\n  //   shallowEqual\r\n  // );\r\n  //const { totalCount, listLoading } = currentState;\r\n\r\n  // Products Redux state\r\n  //const dispatch = useDispatch();\r\n\r\n  function fetchCourses(keyword) {\r\n    const url = keyword\r\n      ? `${process.env.REACT_APP_WEBSERVER_API_URL}/auths?keyword=${keyword}`\r\n      : `${process.env.REACT_APP_WEBSERVER_API_URL}/auths`;\r\n\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        setTotalCount(result.length);\r\n        setEntities(result);\r\n        setListLoading(false);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    const keyword = props.queryParams.filter.model || \"\";\r\n    console.log(\"keyword searched: \" + keyword);\r\n\r\n    fetchCourses(keyword);\r\n    console.log(\"courses fetched\");\r\n  }, [props]);\r\n\r\n  // Table columns\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"Course id\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Tên\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"username\",\r\n      text: \"Tên đăng nhập\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"password\",\r\n      text: \"Mật khẩu\",\r\n      sort: true,\r\n      sortCaret: sortCaret,\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Trạng thái\",\r\n    },\r\n    {\r\n      dataField: \"action\",\r\n      text: \"Actions\",\r\n      formatter: columnFormatters.ActionsColumnFormatter,\r\n      formatExtraData: {\r\n        openEditProductPage: productsUIProps.openEditProductPage,\r\n        openDeleteProductDialog: productsUIProps.openDeleteProductDialog,\r\n      },\r\n      classes: \"text-right pr-0\",\r\n      headerClasses: \"text-right pr-3\",\r\n      style: {\r\n        minWidth: \"100px\",\r\n      },\r\n    },\r\n  ];\r\n  // Table pagination properties\r\n  const paginationOptions = {\r\n    custom: true,\r\n    totalSize: totalCount,\r\n    sizePerPageList: uiHelpers.sizePerPageList,\r\n    sizePerPage: productsUIProps.queryParams.pageSize,\r\n    page: productsUIProps.queryParams.pageNumber,\r\n  };\r\n  return (\r\n    <>\r\n      {batchSelection.length > 0 && <ProductsGrouping ids={batchSelection} />}\r\n      <BootstrapTable\r\n        wrapperClasses=\"table-responsive\"\r\n        classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n        bootstrap4\r\n        bordered={false}\r\n        keyField=\"id\"\r\n        data={entities === null ? [] : entities}\r\n        columns={columns}\r\n        selectRow={getSelectedRows}\r\n        pagination={paginationFactory()}\r\n      >\r\n        <PleaseWaitMessage entities={entities} />\r\n        <NoRecordsFoundMessage entities={entities} />\r\n      </BootstrapTable>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}